# sudoにaliasしたコマンドを実行
alias sudo='sudo '
# 同様にnohupにも
alias nohup='nohup '
# 色付け
alias ll='ls -lGF'
alias ls='ls -GF'
# 再起コピー
alias cpr='cp -r'
# Neovim
alias vi='nvim'
# ファイル移動
alias cnvim='cd ~/.config/nvim'
alias czsh='cd ~/zsh/'
# python
alias python='python3'
alias pip='pip3'
alias py='python3'
# git
alias g='git'
alias ga='git add'
alias gd='git diff'
alias gs='git status'
alias gpush='git push'
alias gpull='git pull'
alias gb='git branch'
alias gch='git checkout'
alias gchb='git checkout -b'
alias gf='git fetch'
alias gc='git commit'
alias gm='git merge'

# カレンダーを2ヶ月分表示
alias cal='cal -A 1'

add_newline() {
	if [[ -z $PS1_NEWLINE_LOGIN ]]; then
		PS1_NEWLINE_LOGIN=TRUE
	else
		printf '¥n'
	fi
}

# mkdir と cd を同時に実行するコマンド mkcd の定義
function mkcd () { mkdir -p "$@" && eval cd "\"\$$#\""; }

# プラグイン管理
source ~/.zplug/init.zsh
# 自身を管理
zplug "zplug/zplug", hook-build:'zplug --self-manage'

# コマンド補完
zplug "zsh-users/zsh-completions"
# 過去のコマンドを自動的に補完
zplug "zsh-users/zsh-autosuggestions"
# コマンドの色付け
zplug "zsh-users/zsh-syntax-highlighting"
# Git のブランチ名・状態表示
# zplug "woefe/git-prompt.zsh"
# zsh theme
zplug romkatv/powerlevel10k, as:theme, depth:1

# なければインストール
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

zstyle ':completion:*:(cd|nvim|cp):*' matcher 'm:{a-z}={A-Z}'

# peco用設定 ----------------------------------------------------------------
# コマンド検索履歴
function peco-history-selection(){
        BUFFER=`history -n 1 | tac | awk '!a[$0]++' | peco`
        CURSOR=$#BUFFER
        zle reset-prompt
}
zle -N peco-history-selection
bindkey '^R' peco-history-selection

## カレントディレクトリ以下のディレクトリ検索・移動
function find_cd() {
    local selected_dir=$(find . -type d | peco)
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
}
zle -N find_cd
bindkey '^X' find_cd

# git-prompt 用設定 ------------------------------------------------------------
# ZSH_THEME_GIT_PROMPT_PREFIX="( "
# ZSH_THEME_GIT_PROMPT_SUFFIX=") "
# ZSH_THEME_GIT_PROMPT_SEPARATOR=" | "
# ZSH_THEME_GIT_PROMPT_BRANCH="%{$fg_bold[cyan]%}"
# ZSH_THEME_GIT_PROMPT_UNMERGED="%{$fg[red]%}✖ "
# ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[green]%}● "
# ZSH_THEME_GIT_PROMPT_UNSTAGED="%{$fg[red]%}✚ "
# ZSH_THEME_GIT_PROMPT_UNTRACKED="… "
# ZSH_THEME_GIT_PROMPT_STASHED="%{$fg[blue]%}⚑ "
# ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg_bold[green]%}✔ "
# git-autosuggestions 用設定 ---------------------------------------------------
bindkey '^f' autosuggest-accept
# ------------------------------------------------------------------------------
