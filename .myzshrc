# sudoにaliasしたコマンドを実行
alias sudo='sudo '
# 同様にnohupにも
alias nohup='nohup '
# 色付け
alias ll='ls -lGF'
alias ls='ls -GF --color=auto'
# 再起コピー
alias cpr='cp -r'
# Neovim
alias vi='nvim'
# ファイル移動
alias cnvim='cd ~/.config/nvim'
alias czsh='cd ~/zsh/'
# python
alias python='python3'
alias pip='pip3'
alias py='python3'
# git
alias g='git'
alias ga='git add'
alias gd='git diff'
alias gs='git status'
alias gpush='git push'
alias gpull='git pull'
alias gb='git branch'
alias gch='git checkout'
alias gchb='git checkout -b'
alias gf='git fetch'
alias gc='git commit'
alias gm='git merge'

# カレンダーを2ヶ月分表示
alias cal='cal -A 1'

add_newline() {
	if [[ -z $PS1_NEWLINE_LOGIN ]]; then
		PS1_NEWLINE_LOGIN=TRUE
	else
		printf '¥n'
	fi
}

# プラグイン管理
source ~/.zplug/init.zsh
# 自身を管理
zplug "zplug/zplug", hook-build:'zplug --self-manage'

# コマンド補完
zplug "zsh-users/zsh-completions"
# 過去のコマンドを自動的に補完
zplug "zsh-users/zsh-autosuggestions"
# コマンドの色付け
zplug "zsh-users/zsh-syntax-highlighting"
# ターミナルのテーマ
zplug romkatv/powerlevel10k, as:theme, depth:1

# なければインストール
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

zstyle ':completion:*:(cd|nvim|ga):*' matcher 'm:{a-z}={A-Z}'
source ~/powerlevel10k/powerlevel10k.zsh-theme

# peco用設定 ----------------------------------------------------------------
# コマンド検索履歴
function peco-history-selection(){
        BUFFER=`history -n 1 | tac | awk '!a[$0]++' | peco`
        CURSOR=$#BUFFER
        zle reset-prompt
}
zle -N peco-history-selection
bindkey '^R' peco-history-selection
# コマンド検索履歴からディレクトリ検索・移動
# if [[ -n $(echo ${^fpath}/chpwd_recent_dirs(N)) && -n $(echo ${^fpath}/cdr(N)) ]]; then
#     autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
#     add-zsh-hook chpwd chpwd_recent_dirs
#     zstyle ':completion:*' recent-dirs-insert both
#     zstyle ':chpwd:*' recent-dirs-default true
#     zstyle ':chpwd:*' recent-dirs-max 1000
#     zstyle ':chpwd:*' recent-dirs-file "$HOME/.cache/chpwd-recent-dirs"
# fi
# function peco-cdr (){
#     local selected_dir="$(cdr -l | sed 's/^[0-9]* *//' | peco)"
#     if [ -n "$selected_dir" ]; then
#         BUFFER="cd ${selected_dir}"
#         zle accept-line
#     fi
# }
# zle -N peco-cdr
# bindkey '^E' peco-cdr

## カレントディレクトリ以下のディレクトリ検索・移動
function find_cd() {
    local selected_dir=$(find . -type d | peco)
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
}
zle -N find_cd
bindkey '^X' find_cd

# ---------------------------------------------------------------------------
